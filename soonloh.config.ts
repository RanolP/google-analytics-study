import { config } from 'soonloh';
import { snzrwm } from 'soonloh/builtin-parsers';
import path from 'node:path';

export default config({
  routerRoot: 'src/routes',
  parser: snzrwm.parser,
  generators: [
    {
      name: 'solid-router',
      targetPath: () => 'src/shared/routes/generated.ts',
      generate(paths) {
        return [
          `// WARNING: do not edit this file directly`,
          `//          the content is auto-generated.`,
          ``,
          `import { lazy } from 'solid-js'`,
          `import type { RouteDefinition } from '@solidjs/router'`,
          ``,
          `export const GeneratedRoutes = [`,
          ...paths.flatMap((p) => {
            const segments = p.segments.flatMap((segment) => {
              switch (segment.kind) {
                case 'grouping':
                case 'terminator':
                  return [];
                case 'static':
                  return [segment.path];
                case 'param':
                  if (segment.catchall) {
                    return [`*${segment.name}`];
                  } else if (segment.optional) {
                    return [`:${segment.name}?`];
                  } else {
                    return [`:${segment.name}`];
                  }
              }
            });
            return [
              `  {`,
              `    path: ${JSON.stringify(
                segments.length === 0 ? ['/'] : segments
              )},`,
              `    component: lazy(() => import(${JSON.stringify(
                path.posix.join('../../routes/', p.filePosix)
              )}))`,
              `  },`,
            ];
          }),
          `] satisfies RouteDefinition[]`,
        ].join('\n');
      },
    },
  ],
});
